{"ast":null,"code":"var _jsxFileName = \"/Users/jeong/Desktop/teamMaker-BE/src/main/frontend/src/pages/TeamMaker.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TeamMaker() {\n  _s();\n  const location = useLocation();\n  const {\n    groupCode\n  } = location.state;\n  const [groupInfo, setGroupInfo] = useState(null);\n  const [studentList, setStudentList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [groupRes, studentsRes] = await Promise.all([axios.get(`http://localhost:8080/api/group/info/${groupCode}`), axios.get(`http://localhost:8080/api/student/list/${groupCode}`)]);\n        setGroupInfo(groupRes.data); // course_name, total_students, students_per_team\n        setStudentList(studentsRes.data); // 모든 수강생 정보\n      } catch (error) {\n        console.error('데이터 불러오기 실패:', error);\n      }\n    };\n    fetchData();\n  }, [groupCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD300 \\uAD6C\\uC131 \\uB3C4\\uC6B0\\uBBF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), groupInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACFC\\uBAA9\\uBA85: \", groupInfo.courseName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD1D \\uC778\\uC6D0: \", groupInfo.totalStudents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD300\\uB2F9 \\uC778\\uC6D0: \", groupInfo.studentsPerTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD559\\uC0DD \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentList.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [s.studentName, \" - \", s.mbti, \" - \", s.role_type]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamMaker, \"AF6dKTlHl00wDm5VSLomAaqsGXQ=\", false, function () {\n  return [useLocation];\n});\n_c = TeamMaker;\nvar _c;\n$RefreshReg$(_c, \"TeamMaker\");","map":{"version":3,"names":["useLocation","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamMaker","_s","location","groupCode","state","groupInfo","setGroupInfo","studentList","setStudentList","fetchData","groupRes","studentsRes","Promise","all","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","courseName","totalStudents","studentsPerTeam","map","s","i","studentName","mbti","role_type","_c","$RefreshReg$"],"sources":["/Users/jeong/Desktop/teamMaker-BE/src/main/frontend/src/pages/TeamMaker.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function TeamMaker() {\n  const location = useLocation();\n  const { groupCode } = location.state;\n\n  const [groupInfo, setGroupInfo] = useState(null);\n  const [studentList, setStudentList] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [groupRes, studentsRes] = await Promise.all([\n          axios.get(`http://localhost:8080/api/group/info/${groupCode}`),\n          axios.get(`http://localhost:8080/api/student/list/${groupCode}`),\n        ]);\n\n        setGroupInfo(groupRes.data);  // course_name, total_students, students_per_team\n        setStudentList(studentsRes.data);  // 모든 수강생 정보\n      } catch (error) {\n        console.error('데이터 불러오기 실패:', error);\n      }\n    };\n\n    fetchData();\n  }, [groupCode]);\n\n  return (\n    <div>\n      <h2>팀 구성 도우미</h2>\n      {groupInfo && (\n        <>\n          <p>과목명: {groupInfo.courseName}</p>\n          <p>총 인원: {groupInfo.totalStudents}</p>\n          <p>팀당 인원: {groupInfo.studentsPerTeam}</p>\n        </>\n      )}\n\n      <h3>학생 목록</h3>\n      <ul>\n        {studentList.map((s, i) => (\n          <li key={i}>\n            {s.studentName} - {s.mbti} - {s.role_type}\n          </li>\n        ))}\n      </ul>\n\n      {/* 이 데이터들을 FastAPI로 POST해 클러스터링 요청 예정 */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAU,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAEpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChDlB,KAAK,CAACmB,GAAG,CAAC,wCAAwCX,SAAS,EAAE,CAAC,EAC9DR,KAAK,CAACmB,GAAG,CAAC,0CAA0CX,SAAS,EAAE,CAAC,CACjE,CAAC;QAEFG,YAAY,CAACI,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;QAC9BP,cAAc,CAACG,WAAW,CAACI,IAAI,CAAC,CAAC,CAAE;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBjB,SAAS,iBACRR,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,GAAG,sBAAK,EAACb,SAAS,CAACkB,UAAU;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCzB,OAAA;QAAAqB,QAAA,GAAG,uBAAM,EAACb,SAAS,CAACmB,aAAa;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCzB,OAAA;QAAAqB,QAAA,GAAG,6BAAO,EAACb,SAAS,CAACoB,eAAe;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACzC,CACH,eAEDzB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzB,OAAA;MAAAqB,QAAA,EACGX,WAAW,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACpB/B,OAAA;QAAAqB,QAAA,GACGS,CAAC,CAACE,WAAW,EAAC,KAAG,EAACF,CAAC,CAACG,IAAI,EAAC,KAAG,EAACH,CAAC,CAACI,SAAS;MAAA,GADlCH,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGF,CAAC;AAEV;AAACrB,EAAA,CAhDuBD,SAAS;EAAA,QACdR,WAAW;AAAA;AAAAwC,EAAA,GADNhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}